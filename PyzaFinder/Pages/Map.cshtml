@page
@model PyzaFinder.Pages.MapModel
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
@section Styles {
    <link rel="stylesheet" href="~/css/Map.css" />
    <link rel="stylesheet" href="~/css/fontello/css/fontello.css" type="text/css" />
    <script src="~/js/oLayers/OpenLayers.js"></script>
    <script src="~/js/oLayers/myInit.js"></script>
    <script src="~/js/oLayers/myMarkersCloud.js"></script>
}
@functions{
    @using Npgsql;private static NpgsqlConnection GetConnection()
    {
        return new NpgsqlConnection(@"Server=localhost;Port=5432;User Id=postgres;Password=Szczeniak101;Database=pierogi");
    }
    private static string SelectSchedule(string day, int obcy)
    {
        using (NpgsqlConnection con = GetConnection())//nawiązanie połączenia z bazą
        {
            string val = "brak";
            string query = $"select {day} from public.schedule where id_restaurant={obcy}";
            con.Open();
            // Define a query returning a single row result set
            NpgsqlCommand command = new NpgsqlCommand(query, con);
            // Execute the query and obtain the value of the first column of the first row
            if (command.ExecuteScalar() != null)
            {
                string count = (string)command.ExecuteScalar();
                val = count;
            }
            con.Close();
            return val;
        }
    }
    private static string SelectPath(int obcy)
    {
        using (NpgsqlConnection con = GetConnection())//nawiązanie połączenia z bazą
        {
            string val = "brak";
            string query = $"select path from public.photo where id_restaurant={obcy} order by id_photo";
            con.Open();
            // Define a query returning a single row result set
            NpgsqlCommand command = new NpgsqlCommand(query, con);
            // Execute the query and obtain the value of the first column of the first row
            if (command.ExecuteScalar() != null)
            {
                string count = (string)command.ExecuteScalar();
                val = count;
            }
            con.Close();
            return val;
        }
    }
    private static string SelectCoordinates(int obcy, string coordinate)
    {
        using (NpgsqlConnection con = GetConnection())//nawiązanie połączenia z bazą
        {
            string val = "brak";
            string query = $"select {coordinate} from public.coordinates where id_restaurant={obcy}";
            con.Open();
            // Define a query returning a single row result set
            NpgsqlCommand command = new NpgsqlCommand(query, con);
            // Execute the query and obtain the value of the first column of the first row
            if (command.ExecuteScalar() != null)
            {
                string count = (string)command.ExecuteScalar().ToString();
                val = count;
            }
            con.Close();
            return val;
        }
    }
    private static int SelectGrade(int obcy)
    {
        using (NpgsqlConnection con = GetConnection())//nawiązanie połączenia z bazą
        {
            int val = 0;
            string query = $"select grade from public.opinion where id_restaurant={obcy}";
            con.Open();
            // Define a query returning a single row result set
            NpgsqlCommand command = new NpgsqlCommand(query, con);
            // Execute the query and obtain the value of the first column of the first row
            var id = 0;
            var reader = command.ExecuteReader();
            int petla = 0;
            while (reader.Read())
            {
                id = id + Int32.Parse(reader["grade"].ToString());
                petla++;
            }
            //if (command.ExecuteScalar() != null)
            //{
            //    Int32 count = (Int32)command.ExecuteScalar();
            //    val = count;
            //}
            val = id;
            if (petla != 0) val = id / petla;
            con.Close();
            return val;
        }
    }
    //private static long CountRowsGrade(int obcy)
    //{
    //    using (NpgsqlConnection con = GetConnection())//nawiązanie połączenia z bazą
    //    {
    //        long val = 0;
    //        string query = $"select count(*) from public.opinion where id_restaurant={obcy}";
    //        con.Open();
    //        // Define a query returning a single row result set
    //        NpgsqlCommand command = new NpgsqlCommand(query, con);
    //        // Execute the query and obtain the value of the first column of the first row
    //        if (command.ExecuteScalar() != null)
    //        {
    //            Int64 count = (Int64)command.ExecuteScalar();
    //            val = count;
    //        }
    //        con.Close();
    //        return val;
    //    }
    //}
}

<div id="basicMap"><img src="~/img/pyzunia.png" style="position: absolute; bottom: 0; right: 0; width: 12%; height: auto; margin: 60px; z-index:1000;"></div>

<div id="search"></div>

<div id="search2">
    <div style=" padding-top: 15px; padding-bottom:15px;">
        <div style="background-color: white;
    width: 260px;
    height: 35px;
    display: block;
    margin-left: 20px;
    color: grey;
    text-align: left;
    font-size: 23px;
    margin-bottom: 10px;
    border-radius: 46px;
    box-shadow: 22px 12px 21px 0px rgba(0,0,0,0.15);">
            <form>
                <i class="icon-search"></i>
                <input value="Search" asp-for="SearchTerm" onfocus="if (this.value == 'Search') {this.value = '';}" style="        height: 35px;
        border-radius: 46px;
        box-shadow: 22px 12px 21px 0px rgba(0,0,0,0.15);
        background-color: #ffffff;
        color: #000000;
        outline: 1px;
        border: 1px;
        border-radius: 46px;
" />

            </form>
        </div>
    </div>
    <h2 style="font-size:20px">LIST OF RESTAURANTS</h2>
    <ul id="restaurants">
        <div style="width: 100%; height: 560px; overflow-y: auto;">
            <script type="text/javascript">
                init();
            </script>
            @foreach (var item in Model.DumplingRestaurants)
            {
                string path = SelectPath(item.IdRestaurant);
                string grade = SelectGrade(item.IdRestaurant).ToString();
                string coord_x = SelectCoordinates(item.IdRestaurant, "coordinate_x").ToString();
                string coord_y = SelectCoordinates(item.IdRestaurant, "coordinate_y").ToString();
                <script type="text/javascript">                       
                fDrawMarkers("@item.Name", "@coord_x", "@coord_y", "@path", "@grade");                              
                </script>
                <a asp-page="Details" asp-route-id="@item.IdRestaurant">
                    <li>
                        <div class="jeden">
                            <div class="napis">
                                Name: @Html.DisplayFor(m => item.Name)<br>
                                Today:
                                @{string day = DateTime.Now.DayOfWeek.ToString(); }
                                @SelectSchedule(day, item.IdRestaurant);
                                <br>
                                @Html.DisplayFor(m => item.Address)
                            </div>
                            <a href="polecam.html"><img src="@Url.Content(path)" style="height: 98%; border-radius: 25px; padding-right: 2%; width: auto; float: right;"></a>
                        </div>
                        <div class="dwa">
                            <div class="gwiazdki">
                                @{ int ocena = 0;
                                    ocena = SelectGrade(item.IdRestaurant);
                                    if (ocena == 0)
                                    {
                                        <p>brak ocen</p> }
                                    while (ocena > 0)
                                    {
                                        if (ocena > 1)
                                        {
                                            <img src="~/img/star.png" style="height: auto; width: 18%; float: left;"> ocena -= 2;
                                        }
                                        if (ocena <= 1 && ocena > 0)
                                        {
                                            <img src="~/img/starL.png" style="height: auto; width: 18%; float: left;"> ocena--;
                                        }
                                    } }
                            </div>
                            <div class="opinie">
                                <a asp-page="Opinion" asp-route-id="@item.IdRestaurant">Show opinions</a>
                            </div>
                            <div class="odleglosc">
                                Distance: 5m
                            </div>
                        </div>
                    </li>
                </a>
                }
            </div>
    </ul>

</div>
<div>

</div>
<div id="pyza">

</div>




